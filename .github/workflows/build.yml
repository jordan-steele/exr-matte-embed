name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  discussions: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Create Windows Executable
      uses: sayyid5416/pyinstaller@v1
      with:
        spec: 'main.py'
        requirements: 'requirements.txt'
        python_ver: '3.9'
        options: |
          --onefile,
          --windowed,
          --name "EXR Matte Embed",
          --icon "images/icon.ico"
        upload_exe_with_name: 'EXR-Matte-Embed-windows-x64'

  build-macos:
    strategy:
      matrix:
        include:
          - arch: arm64
            python-arch: ''
          - arch: x86_64
            python-arch: 'x86_64'
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python for x86_64
      if: matrix.arch == 'x86_64'
      run: |
        curl -L -o python.pkg https://www.python.org/ftp/python/3.9.7/python-3.9.7-macosx10.9.pkg
        sudo installer -pkg python.pkg -target /

    - name: Set up Python for arm64
      if: matrix.arch == 'arm64'
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        if [ "${{ matrix.arch }}" = "x86_64" ]; then
          arch -x86_64 /Library/Frameworks/Python.framework/Versions/3.9/bin/python3 -m pip install --upgrade pip
          arch -x86_64 /Library/Frameworks/Python.framework/Versions/3.9/bin/python3 -m pip install -r requirements.txt
          arch -x86_64 /Library/Frameworks/Python.framework/Versions/3.9/bin/python3 -m pip install pyinstaller
        else
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller
        fi
        brew install create-dmg

    - name: Create macOS App Bundle
      run: |
        if [ "${{ matrix.arch }}" = "x86_64" ]; then
          PYTHON_PATH=/Library/Frameworks/Python.framework/Versions/3.9/bin/python3
        else
          PYTHON_PATH=python
        fi
        
        arch -arch ${{ matrix.arch }} $PYTHON_PATH -m PyInstaller \
          --name "EXR Matte Embed" \
          --icon "images/icon.icns" \
          --add-data "images:images" \
          main.py

    - name: Create DMG
      run: |
        create-dmg \
          --volname "EXR Matte Embed" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --icon "EXR Matte Embed.app" 200 190 \
          --hide-extension "EXR Matte Embed.app" \
          --app-drop-link 600 185 \
          --skip-jenkins \
          "dist/EXR-Matte-Embed-macos-${{ matrix.arch }}.dmg" \
          "dist/EXR Matte Embed.app"

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: EXR-Matte-Embed-macos-${{ matrix.arch }}
        path: dist/EXR-Matte-Embed-macos-${{ matrix.arch }}.dmg

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startswith(github.ref, 'refs/tags/')
      with:
        files: |
          EXR-Matte-Embed-windows-x64/*
          EXR-Matte-Embed-macos-x86_64/*
          EXR-Matte-Embed-macos-arm64/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}